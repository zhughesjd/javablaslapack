package net.joshuahughes.jnablaslapack;

import com.sun.jna.Library;
import com.sun.jna.Native;
import net.joshuahughes.jnablaslapack.pointer.*;

public interface LapackSO extends Library
{

	public static LapackSO instance = (LapackSO) Native.loadLibrary("liblapack",LapackSO.class);

	public void sopgtr_(CHARACTER UPLO,INTEGER N,float[] AP,float[] TAU,float[] Q,INTEGER LDQ,float[] WORK,INTEGER INFO);
	public void sopmtr_(CHARACTER SIDE,CHARACTER UPLO,CHARACTER TRANS,INTEGER M,INTEGER N,float[] AP,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER INFO);
	public void sorbdb_(CHARACTER TRANS,CHARACTER SIGNS,INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X12,INTEGER LDX12,float[] X21,INTEGER LDX21,float[] X22,INTEGER LDX22,float[] THETA,float[] PHI,float[] TAUP1,float[] TAUP2,float[] TAUQ1,float[] TAUQ2,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorbdb1_(INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X21,INTEGER LDX21,float[] THETA,float[] PHI,float[] TAUP1,float[] TAUP2,float[] TAUQ1,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorbdb2_(INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X21,INTEGER LDX21,float[] THETA,float[] PHI,float[] TAUP1,float[] TAUP2,float[] TAUQ1,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorbdb3_(INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X21,INTEGER LDX21,float[] THETA,float[] PHI,float[] TAUP1,float[] TAUP2,float[] TAUQ1,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorbdb4_(INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X21,INTEGER LDX21,float[] THETA,float[] PHI,float[] TAUP1,float[] TAUP2,float[] TAUQ1,float[] PHANTOM,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorbdb5_(INTEGER M1,INTEGER M2,INTEGER N,float[] X1,INTEGER INCX1,float[] X2,INTEGER INCX2,float[] Q1,INTEGER LDQ1,float[] Q2,INTEGER LDQ2,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorbdb6_(INTEGER M1,INTEGER M2,INTEGER N,float[] X1,INTEGER INCX1,float[] X2,INTEGER INCX2,float[] Q1,INTEGER LDQ1,float[] Q2,INTEGER LDQ2,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorcsd_(CHARACTER JOBU1,CHARACTER JOBU2,CHARACTER JOBV1T,CHARACTER JOBV2T,CHARACTER TRANS,CHARACTER SIGNS,INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X12,INTEGER LDX12,float[] X21,INTEGER LDX21,float[] X22,INTEGER LDX22,float[] THETA,float[] U1,INTEGER LDU1,float[] U2,INTEGER LDU2,float[] V1T,INTEGER LDV1T,float[] V2T,INTEGER LDV2T,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER INFO);
	public void sorcsd2by1_(CHARACTER JOBU1,CHARACTER JOBU2,CHARACTER JOBV1T,INTEGER M,INTEGER P,INTEGER Q,float[] X11,INTEGER LDX11,float[] X21,INTEGER LDX21,float[] THETA,float[] U1,INTEGER LDU1,float[] U2,INTEGER LDU2,float[] V1T,INTEGER LDV1T,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER INFO);
	public void sorg2l_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER INFO);
	public void sorg2r_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER INFO);
	public void sorgbr_(CHARACTER VECT,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorghr_(INTEGER N,INTEGER ILO,INTEGER IHI,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorgl2_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER INFO);
	public void sorglq_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorgql_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorgqr_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorgr2_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER INFO);
	public void sorgrq_(INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorgtr_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorm22_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER N1,INTEGER N2,float[] Q,INTEGER LDQ,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorm2l_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER INFO);
	public void sorm2r_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER INFO);
	public void sormbr_(CHARACTER VECT,CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sormhr_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER ILO,INTEGER IHI,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sorml2_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER INFO);
	public void sormlq_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sormql_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sormqr_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sormr2_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER INFO);
	public void sormr3_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,INTEGER L,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER INFO);
	public void sormrq_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sormrz_(CHARACTER SIDE,CHARACTER TRANS,INTEGER M,INTEGER N,INTEGER K,INTEGER L,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void sormtr_(CHARACTER SIDE,CHARACTER UPLO,CHARACTER TRANS,INTEGER M,INTEGER N,float[] A,INTEGER LDA,float[] TAU,float[] C,INTEGER LDC,float[] WORK,INTEGER LWORK,INTEGER INFO);

}