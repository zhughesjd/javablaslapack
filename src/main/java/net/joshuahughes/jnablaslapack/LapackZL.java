package net.joshuahughes.jnablaslapack;

import com.sun.jna.Library;
import com.sun.jna.Native;
import net.joshuahughes.jnablaslapack.pointer.*;

public interface LapackZL extends Library
{

	public static LapackZL instance = (LapackZL) Native.loadLibrary("liblapack",LapackZL.class);

	public void zlabrd_(INTEGER M,INTEGER N,INTEGER NB,double[] A,INTEGER LDA,double[] D,double[] E,double[] TAUQ,double[] TAUP,double[] X,INTEGER LDX,double[] Y,INTEGER LDY);
	public void zlacgv_(INTEGER N,double[] X,INTEGER INCX);
	public void zlacn2_(INTEGER N,double[] V,double[] X,DOUBLE EST,INTEGER KASE,int[] ISAVE);
	public void zlacon_(INTEGER N,double[] V,double[] X,DOUBLE EST,INTEGER KASE);
	public void zlacp2_(CHARACTER UPLO,INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] B,INTEGER LDB);
	public void zlacpy_(CHARACTER UPLO,INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] B,INTEGER LDB);
	public void zlacrm_(INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] B,INTEGER LDB,double[] C,INTEGER LDC,double[] RWORK);
	public void zlacrt_(INTEGER N,double[] CX,INTEGER INCX,double[] CY,INTEGER INCY,double[] C,double[] S);
	public double[] zladiv_(double[] X,double[] Y);
	public void zlaed0_(INTEGER QSIZ,INTEGER N,double[] D,double[] E,double[] Q,INTEGER LDQ,double[] QSTORE,INTEGER LDQS,double[] RWORK,int[] IWORK,INTEGER INFO);
	public void zlaed7_(INTEGER N,INTEGER CUTPNT,INTEGER QSIZ,INTEGER TLVLS,INTEGER CURLVL,INTEGER CURPBM,double[] D,double[] Q,INTEGER LDQ,DOUBLE RHO,int[] INDXQ,double[] QSTORE,int[] QPTR,int[] PRMPTR,int[] PERM,int[] GIVPTR,int[] GIVCOL,double[] GIVNUM,double[] WORK,double[] RWORK,int[] IWORK,INTEGER INFO);
	public void zlaed8_(INTEGER K,INTEGER N,INTEGER QSIZ,double[] Q,INTEGER LDQ,double[] D,DOUBLE RHO,INTEGER CUTPNT,double[] Z,double[] DLAMDA,double[] Q2,INTEGER LDQ2,double[] W,int[] INDXP,int[] INDX,int[] INDXQ,int[] PERM,INTEGER GIVPTR,int[] GIVCOL,double[] GIVNUM,INTEGER INFO);
	public void zlaein_(LOGICAL RIGHTV,LOGICAL NOINIT,INTEGER N,double[] H,INTEGER LDH,double[] W,double[] V,double[] B,INTEGER LDB,double[] RWORK,DOUBLE EPS3,DOUBLE SMLNUM,INTEGER INFO);
	public void zlaesy_(double[] A,double[] B,double[] C,double[] RT1,double[] RT2,double[] EVSCAL,double[] CS1,double[] SN1);
	public void zlaev2_(double[] A,double[] B,double[] C,DOUBLE RT1,DOUBLE RT2,DOUBLE CS1,double[] SN1);
	public void zlag2c_(INTEGER M,INTEGER N,double[] A,INTEGER LDA,float[] SA,INTEGER LDSA,INTEGER INFO);
	public void zlags2_(LOGICAL UPPER,DOUBLE A1,double[] A2,DOUBLE A3,DOUBLE B1,double[] B2,DOUBLE B3,DOUBLE CSU,double[] SNU,DOUBLE CSV,double[] SNV,DOUBLE CSQ,double[] SNQ);
	public void zlagtm_(CHARACTER TRANS,INTEGER N,INTEGER NRHS,DOUBLE ALPHA,double[] DL,double[] D,double[] DU,double[] X,INTEGER LDX,DOUBLE BETA,double[] B,INTEGER LDB);
	public void zlahef_(CHARACTER UPLO,INTEGER N,INTEGER NB,INTEGER KB,double[] A,INTEGER LDA,int[] IPIV,double[] W,INTEGER LDW,INTEGER INFO);
	public void zlahef_rook_(CHARACTER UPLO,INTEGER N,INTEGER NB,INTEGER KB,double[] A,INTEGER LDA,int[] IPIV,double[] W,INTEGER LDW,INTEGER INFO);
	public void zlahqr_(LOGICAL WANTT,LOGICAL WANTZ,INTEGER N,INTEGER ILO,INTEGER IHI,double[] H,INTEGER LDH,double[] W,INTEGER ILOZ,INTEGER IHIZ,double[] Z,INTEGER LDZ,INTEGER INFO);
	public void zlahr2_(INTEGER N,INTEGER K,INTEGER NB,double[] A,INTEGER LDA,double[] TAU,double[] T,INTEGER LDT,double[] Y,INTEGER LDY);
	public void zlaic1_(INTEGER JOB,INTEGER J,double[] X,DOUBLE SEST,double[] W,double[] GAMMA,DOUBLE SESTPR,double[] S,double[] C);
	public void zlals0_(INTEGER ICOMPQ,INTEGER NL,INTEGER NR,INTEGER SQRE,INTEGER NRHS,double[] B,INTEGER LDB,double[] BX,INTEGER LDBX,int[] PERM,INTEGER GIVPTR,int[] GIVCOL,INTEGER LDGCOL,double[] GIVNUM,INTEGER LDGNUM,double[] POLES,double[] DIFL,double[] DIFR,double[] Z,INTEGER K,DOUBLE C,DOUBLE S,double[] RWORK,INTEGER INFO);
	public void zlalsa_(INTEGER ICOMPQ,INTEGER SMLSIZ,INTEGER N,INTEGER NRHS,double[] B,INTEGER LDB,double[] BX,INTEGER LDBX,double[] U,INTEGER LDU,double[] VT,int[] K,double[] DIFL,double[] DIFR,double[] Z,double[] POLES,int[] GIVPTR,int[] GIVCOL,INTEGER LDGCOL,int[] PERM,double[] GIVNUM,double[] C,double[] S,double[] RWORK,int[] IWORK,INTEGER INFO);
	public void zlalsd_(CHARACTER UPLO,INTEGER SMLSIZ,INTEGER N,INTEGER NRHS,double[] D,double[] E,double[] B,INTEGER LDB,DOUBLE RCOND,INTEGER RANK,double[] WORK,double[] RWORK,int[] IWORK,INTEGER INFO);
	public double zlangb_(CHARACTER NORM,INTEGER N,INTEGER KL,INTEGER KU,double[] AB,INTEGER LDAB,double[] WORK);
	public double zlange_(CHARACTER NORM,INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] WORK);
	public double zlangt_(CHARACTER NORM,INTEGER N,double[] DL,double[] D,double[] DU);
	public double zlanhb_(CHARACTER NORM,CHARACTER UPLO,INTEGER N,INTEGER K,double[] AB,INTEGER LDAB,double[] WORK);
	public double zlanhe_(CHARACTER NORM,CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] WORK);
	public double zlanhf_(CHARACTER NORM,CHARACTER TRANSR,CHARACTER UPLO,INTEGER N,double[] A,double[] WORK);
	public double zlanhp_(CHARACTER NORM,CHARACTER UPLO,INTEGER N,double[] AP,double[] WORK);
	public double zlanhs_(CHARACTER NORM,INTEGER N,double[] A,INTEGER LDA,double[] WORK);
	public double zlanht_(CHARACTER NORM,INTEGER N,double[] D,double[] E);
	public double zlansb_(CHARACTER NORM,CHARACTER UPLO,INTEGER N,INTEGER K,double[] AB,INTEGER LDAB,double[] WORK);
	public double zlansp_(CHARACTER NORM,CHARACTER UPLO,INTEGER N,double[] AP,double[] WORK);
	public double zlansy_(CHARACTER NORM,CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] WORK);
	public double zlantb_(CHARACTER NORM,CHARACTER UPLO,CHARACTER DIAG,INTEGER N,INTEGER K,double[] AB,INTEGER LDAB,double[] WORK);
	public double zlantp_(CHARACTER NORM,CHARACTER UPLO,CHARACTER DIAG,INTEGER N,double[] AP,double[] WORK);
	public double zlantr_(CHARACTER NORM,CHARACTER UPLO,CHARACTER DIAG,INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] WORK);
	public void zlapll_(INTEGER N,double[] X,INTEGER INCX,double[] Y,INTEGER INCY,DOUBLE SSMIN);
	public void zlapmr_(LOGICAL FORWRD,INTEGER M,INTEGER N,double[] X,INTEGER LDX,int[] K);
	public void zlapmt_(LOGICAL FORWRD,INTEGER M,INTEGER N,double[] X,INTEGER LDX,int[] K);
	public void zlaqgb_(INTEGER M,INTEGER N,INTEGER KL,INTEGER KU,double[] AB,INTEGER LDAB,double[] R,double[] C,DOUBLE ROWCND,DOUBLE COLCND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqge_(INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] R,double[] C,DOUBLE ROWCND,DOUBLE COLCND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqhb_(CHARACTER UPLO,INTEGER N,INTEGER KD,double[] AB,INTEGER LDAB,double[] S,DOUBLE SCOND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqhe_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] S,DOUBLE SCOND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqhp_(CHARACTER UPLO,INTEGER N,double[] AP,double[] S,DOUBLE SCOND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqp2_(INTEGER M,INTEGER N,INTEGER OFFSET,double[] A,INTEGER LDA,int[] JPVT,double[] TAU,double[] VN1,double[] VN2,double[] WORK);
	public void zlaqps_(INTEGER M,INTEGER N,INTEGER OFFSET,INTEGER NB,INTEGER KB,double[] A,INTEGER LDA,int[] JPVT,double[] TAU,double[] VN1,double[] VN2,double[] AUXV,double[] F,INTEGER LDF);
	public void zlaqr0_(LOGICAL WANTT,LOGICAL WANTZ,INTEGER N,INTEGER ILO,INTEGER IHI,double[] H,INTEGER LDH,double[] W,INTEGER ILOZ,INTEGER IHIZ,double[] Z,INTEGER LDZ,double[] WORK,INTEGER LWORK,INTEGER INFO);
	public void zlaqr1_(INTEGER N,double[] H,INTEGER LDH,double[] S1,double[] S2,double[] V);
	public void zlaqr2_(LOGICAL WANTT,LOGICAL WANTZ,INTEGER N,INTEGER KTOP,INTEGER KBOT,INTEGER NW,double[] H,INTEGER LDH,INTEGER ILOZ,INTEGER IHIZ,double[] Z,INTEGER LDZ,INTEGER NS,INTEGER ND,double[] SH,double[] V,INTEGER LDV,INTEGER NH,double[] T,INTEGER LDT,INTEGER NV,double[] WV,INTEGER LDWV,double[] WORK,INTEGER LWORK);
	public void zlaqr3_(LOGICAL WANTT,LOGICAL WANTZ,INTEGER N,INTEGER KTOP,INTEGER KBOT,INTEGER NW,double[] H,INTEGER LDH,INTEGER ILOZ,INTEGER IHIZ,double[] Z,INTEGER LDZ,INTEGER NS,INTEGER ND,double[] SH,double[] V,INTEGER LDV,INTEGER NH,double[] T,INTEGER LDT,INTEGER NV,double[] WV,INTEGER LDWV,double[] WORK,INTEGER LWORK);
	public void zlaqr4_(LOGICAL WANTT,LOGICAL WANTZ,INTEGER N,INTEGER ILO,INTEGER IHI,double[] H,INTEGER LDH,double[] W,INTEGER ILOZ,INTEGER IHIZ,double[] Z,INTEGER LDZ,double[] WORK,INTEGER LWORK,INTEGER INFO);
	public void zlaqr5_(LOGICAL WANTT,LOGICAL WANTZ,INTEGER KACC22,INTEGER N,INTEGER KTOP,INTEGER KBOT,INTEGER NSHFTS,double[] S,double[] H,INTEGER LDH,INTEGER ILOZ,INTEGER IHIZ,double[] Z,INTEGER LDZ,double[] V,INTEGER LDV,double[] U,INTEGER LDU,INTEGER NV,double[] WV,INTEGER LDWV,INTEGER NH,double[] WH,INTEGER LDWH);
	public void zlaqsb_(CHARACTER UPLO,INTEGER N,INTEGER KD,double[] AB,INTEGER LDAB,double[] S,DOUBLE SCOND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqsp_(CHARACTER UPLO,INTEGER N,double[] AP,double[] S,DOUBLE SCOND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlaqsy_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] S,DOUBLE SCOND,DOUBLE AMAX,CHARACTER EQUED);
	public void zlar1v_(INTEGER N,INTEGER B1,INTEGER BN,DOUBLE LAMBDA,double[] D,double[] L,double[] LD,double[] LLD,DOUBLE PIVMIN,DOUBLE GAPTOL,double[] Z,LOGICAL WANTNC,INTEGER NEGCNT,DOUBLE ZTZ,DOUBLE MINGMA,INTEGER R,int[] ISUPPZ,DOUBLE NRMINV,DOUBLE RESID,DOUBLE RQCORR,double[] WORK);
	public void zlar2v_(INTEGER N,double[] X,double[] Y,double[] Z,INTEGER INCX,double[] C,double[] S,INTEGER INCC);
	public void zlarcm_(INTEGER M,INTEGER N,double[] A,INTEGER LDA,double[] B,INTEGER LDB,double[] C,INTEGER LDC,double[] RWORK);
	public void zlarf_(CHARACTER SIDE,INTEGER M,INTEGER N,double[] V,INTEGER INCV,double[] TAU,double[] C,INTEGER LDC,double[] WORK);
	public void zlarfb_(CHARACTER SIDE,CHARACTER TRANS,CHARACTER DIRECT,CHARACTER STOREV,INTEGER M,INTEGER N,INTEGER K,double[] V,INTEGER LDV,double[] T,INTEGER LDT,double[] C,INTEGER LDC,double[] WORK,INTEGER LDWORK);
	public void zlarfg_(INTEGER N,double[] ALPHA,double[] X,INTEGER INCX,double[] TAU);
	public void zlarfgp_(INTEGER N,double[] ALPHA,double[] X,INTEGER INCX,double[] TAU);
	public void zlarft_(CHARACTER DIRECT,CHARACTER STOREV,INTEGER N,INTEGER K,double[] V,INTEGER LDV,double[] TAU,double[] T,INTEGER LDT);
	public void zlarfx_(CHARACTER SIDE,INTEGER M,INTEGER N,double[] V,double[] TAU,double[] C,INTEGER LDC,double[] WORK);
	public void zlargv_(INTEGER N,double[] X,INTEGER INCX,double[] Y,INTEGER INCY,double[] C,INTEGER INCC);
	public void zlarnv_(INTEGER IDIST,int[] ISEED,INTEGER N,double[] X);
	public void zlarrv_(INTEGER N,DOUBLE VL,DOUBLE VU,double[] D,double[] L,DOUBLE PIVMIN,int[] ISPLIT,INTEGER M,INTEGER DOL,INTEGER DOU,DOUBLE MINRGP,DOUBLE RTOL1,DOUBLE RTOL2,double[] W,double[] WERR,double[] WGAP,int[] IBLOCK,int[] INDEXW,double[] GERS,double[] Z,INTEGER LDZ,int[] ISUPPZ,double[] WORK,int[] IWORK,INTEGER INFO);
	public void zlarscl2_(INTEGER M,INTEGER N,double[] D,double[] X,INTEGER LDX);
	public void zlartg_(double[] F,double[] G,DOUBLE CS,double[] SN,double[] R);
	public void zlartv_(INTEGER N,double[] X,INTEGER INCX,double[] Y,INTEGER INCY,double[] C,double[] S,INTEGER INCC);
	public void zlarz_(CHARACTER SIDE,INTEGER M,INTEGER N,INTEGER L,double[] V,INTEGER INCV,double[] TAU,double[] C,INTEGER LDC,double[] WORK);
	public void zlarzb_(CHARACTER SIDE,CHARACTER TRANS,CHARACTER DIRECT,CHARACTER STOREV,INTEGER M,INTEGER N,INTEGER K,INTEGER L,double[] V,INTEGER LDV,double[] T,INTEGER LDT,double[] C,INTEGER LDC,double[] WORK,INTEGER LDWORK);
	public void zlarzt_(CHARACTER DIRECT,CHARACTER STOREV,INTEGER N,INTEGER K,double[] V,INTEGER LDV,double[] TAU,double[] T,INTEGER LDT);
	public void zlascl_(CHARACTER TYPE,INTEGER KL,INTEGER KU,DOUBLE CFROM,DOUBLE CTO,INTEGER M,INTEGER N,double[] A,INTEGER LDA,INTEGER INFO);
	public void zlascl2_(INTEGER M,INTEGER N,double[] D,double[] X,INTEGER LDX);
	public void zlaset_(CHARACTER UPLO,INTEGER M,INTEGER N,double[] ALPHA,double[] BETA,double[] A,INTEGER LDA);
	public void zlasr_(CHARACTER SIDE,CHARACTER PIVOT,CHARACTER DIRECT,INTEGER M,INTEGER N,double[] C,double[] S,double[] A,INTEGER LDA);
	public void zlassq_(INTEGER N,double[] X,INTEGER INCX,DOUBLE SCALE,DOUBLE SUMSQ);
	public void zlaswp_(INTEGER N,double[] A,INTEGER LDA,INTEGER K1,INTEGER K2,int[] IPIV,INTEGER INCX);
	public void zlasyf_(CHARACTER UPLO,INTEGER N,INTEGER NB,INTEGER KB,double[] A,INTEGER LDA,int[] IPIV,double[] W,INTEGER LDW,INTEGER INFO);
	public void zlasyf_rook_(CHARACTER UPLO,INTEGER N,INTEGER NB,INTEGER KB,double[] A,INTEGER LDA,int[] IPIV,double[] W,INTEGER LDW,INTEGER INFO);
	public void zlat2c_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,float[] SA,INTEGER LDSA,INTEGER INFO);
	public void zlatbs_(CHARACTER UPLO,CHARACTER TRANS,CHARACTER DIAG,CHARACTER NORMIN,INTEGER N,INTEGER KD,double[] AB,INTEGER LDAB,double[] X,DOUBLE SCALE,double[] CNORM,INTEGER INFO);
	public void zlatdf_(INTEGER IJOB,INTEGER N,double[] Z,INTEGER LDZ,double[] RHS,DOUBLE RDSUM,DOUBLE RDSCAL,int[] IPIV,int[] JPIV);
	public void zlatps_(CHARACTER UPLO,CHARACTER TRANS,CHARACTER DIAG,CHARACTER NORMIN,INTEGER N,double[] AP,double[] X,DOUBLE SCALE,double[] CNORM,INTEGER INFO);
	public void zlatrd_(CHARACTER UPLO,INTEGER N,INTEGER NB,double[] A,INTEGER LDA,double[] E,double[] TAU,double[] W,INTEGER LDW);
	public void zlatrs_(CHARACTER UPLO,CHARACTER TRANS,CHARACTER DIAG,CHARACTER NORMIN,INTEGER N,double[] A,INTEGER LDA,double[] X,DOUBLE SCALE,double[] CNORM,INTEGER INFO);
	public void zlatrz_(INTEGER M,INTEGER N,INTEGER L,double[] A,INTEGER LDA,double[] TAU,double[] WORK);
	public void zlauu2_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,INTEGER INFO);
	public void zlauum_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,INTEGER INFO);
	public void zla_gbamv_(INTEGER TRANS,INTEGER M,INTEGER N,INTEGER KL,INTEGER KU,DOUBLE ALPHA,double[] AB,INTEGER LDAB,double[] X,INTEGER INCX,DOUBLE BETA,double[] Y,INTEGER INCY,DOUBLE DLAMCH);
	public double zla_gbrcond_c_(CHARACTER TRANS,INTEGER N,INTEGER KL,INTEGER KU,double[] AB,INTEGER LDAB,double[] AFB,INTEGER LDAFB,int[] IPIV,double[] C,LOGICAL CAPPLY,INTEGER INFO,double[] WORK,double[] RWORK);
	public double zla_gbrcond_x_(CHARACTER TRANS,INTEGER N,INTEGER KL,INTEGER KU,double[] AB,INTEGER LDAB,double[] AFB,INTEGER LDAFB,int[] IPIV,double[] X,INTEGER INFO,double[] WORK,double[] RWORK);
	public void zla_gbrfsx_extended_(INTEGER PREC_TYPE,INTEGER TRANS_TYPE,INTEGER N,INTEGER KL,INTEGER KU,INTEGER NRHS,double[] AB,INTEGER LDAB,double[] AFB,INTEGER LDAFB,int[] IPIV,LOGICAL COLEQU,double[] C,double[] B,INTEGER LDB,double[] Y,INTEGER LDY,double[] BERR_OUT,INTEGER N_NORMS,double[] ERR_BNDS_NORM,double[] ERR_BNDS_COMP,double[] RES,double[] AYB,double[] DY,double[] Y_TAIL,DOUBLE RCOND,INTEGER ITHRESH,DOUBLE RTHRESH,DOUBLE DZ_UB,LOGICAL IGNORE_CWISE,INTEGER INFO,DOUBLE DLAMCH,CHARACTER CHLA_TRANSTYPE);
	public double zla_gbrpvgrw_(INTEGER N,INTEGER KL,INTEGER KU,INTEGER NCOLS,double[] AB,INTEGER LDAB,double[] AFB,INTEGER LDAFB);
	public void zla_geamv_(INTEGER TRANS,INTEGER M,INTEGER N,DOUBLE ALPHA,double[] A,INTEGER LDA,double[] X,INTEGER INCX,DOUBLE BETA,double[] Y,INTEGER INCY,DOUBLE DLAMCH);
	public double zla_gercond_c_(CHARACTER TRANS,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] C,LOGICAL CAPPLY,INTEGER INFO,double[] WORK,double[] RWORK);
	public double zla_gercond_x_(CHARACTER TRANS,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] X,INTEGER INFO,double[] WORK,double[] RWORK);
	public void zla_gerfsx_extended_(INTEGER PREC_TYPE,INTEGER TRANS_TYPE,INTEGER N,INTEGER NRHS,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,LOGICAL COLEQU,double[] C,double[] B,INTEGER LDB,double[] Y,INTEGER LDY,double[] BERR_OUT,INTEGER N_NORMS,double[] ERRS_N,double[] ERRS_C,double[] RES,double[] AYB,double[] DY,double[] Y_TAIL,DOUBLE RCOND,INTEGER ITHRESH,DOUBLE RTHRESH,DOUBLE DZ_UB,LOGICAL IGNORE_CWISE,INTEGER INFO,DOUBLE DLAMCH,CHARACTER CHLA_TRANSTYPE);
	public double zla_gerpvgrw_(INTEGER N,INTEGER NCOLS,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF);
	public void zla_heamv_(INTEGER UPLO,INTEGER N,DOUBLE ALPHA,double[] A,INTEGER LDA,double[] X,INTEGER INCX,DOUBLE BETA,double[] Y,INTEGER INCY,DOUBLE DLAMCH);
	public double zla_hercond_c_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] C,LOGICAL CAPPLY,INTEGER INFO,double[] WORK,double[] RWORK);
	public double zla_hercond_x_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] X,INTEGER INFO,double[] WORK,double[] RWORK);
	public void zla_herfsx_extended_(INTEGER PREC_TYPE,CHARACTER UPLO,INTEGER N,INTEGER NRHS,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,LOGICAL COLEQU,double[] C,double[] B,INTEGER LDB,double[] Y,INTEGER LDY,double[] BERR_OUT,INTEGER N_NORMS,double[] ERR_BNDS_NORM,double[] ERR_BNDS_COMP,double[] RES,double[] AYB,double[] DY,double[] Y_TAIL,DOUBLE RCOND,INTEGER ITHRESH,DOUBLE RTHRESH,DOUBLE DZ_UB,LOGICAL IGNORE_CWISE,INTEGER INFO,INTEGER ILAUPLO);
	public double zla_herpvgrw_(CHARACTER UPLO,INTEGER N,INTEGER INFO,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] WORK);
	public void zla_lin_berr_(INTEGER N,INTEGER NZ,INTEGER NRHS,double[] RES,double[] AYB,double[] BERR);
	public double zla_porcond_c_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,double[] C,LOGICAL CAPPLY,INTEGER INFO,double[] WORK,double[] RWORK);
	public double zla_porcond_x_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,double[] X,INTEGER INFO,double[] WORK,double[] RWORK);
	public void zla_porfsx_extended_(INTEGER PREC_TYPE,CHARACTER UPLO,INTEGER N,INTEGER NRHS,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,LOGICAL COLEQU,double[] C,double[] B,INTEGER LDB,double[] Y,INTEGER LDY,double[] BERR_OUT,INTEGER N_NORMS,double[] ERR_BNDS_NORM,double[] ERR_BNDS_COMP,double[] RES,double[] AYB,double[] DY,double[] Y_TAIL,DOUBLE RCOND,INTEGER ITHRESH,DOUBLE RTHRESH,DOUBLE DZ_UB,LOGICAL IGNORE_CWISE,INTEGER INFO,INTEGER ILAUPLO);
	public double zla_porpvgrw_(CHARACTER UPLO,INTEGER NCOLS,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,double[] WORK);
	public void zla_syamv_(INTEGER UPLO,INTEGER N,DOUBLE ALPHA,double[] A,INTEGER LDA,double[] X,INTEGER INCX,DOUBLE BETA,double[] Y,INTEGER INCY,DOUBLE DLAMCH);
	public double zla_syrcond_c_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] C,LOGICAL CAPPLY,INTEGER INFO,double[] WORK,double[] RWORK);
	public double zla_syrcond_x_(CHARACTER UPLO,INTEGER N,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] X,INTEGER INFO,double[] WORK,double[] RWORK);
	public void zla_syrfsx_extended_(INTEGER PREC_TYPE,CHARACTER UPLO,INTEGER N,INTEGER NRHS,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,LOGICAL COLEQU,double[] C,double[] B,INTEGER LDB,double[] Y,INTEGER LDY,double[] BERR_OUT,INTEGER N_NORMS,double[] ERR_BNDS_NORM,double[] ERR_BNDS_COMP,double[] RES,double[] AYB,double[] DY,double[] Y_TAIL,DOUBLE RCOND,INTEGER ITHRESH,DOUBLE RTHRESH,DOUBLE DZ_UB,LOGICAL IGNORE_CWISE,INTEGER INFO,INTEGER ILAUPLO);
	public double zla_syrpvgrw_(CHARACTER UPLO,INTEGER N,INTEGER INFO,double[] A,INTEGER LDA,double[] AF,INTEGER LDAF,int[] IPIV,double[] WORK);
	public void zla_wwaddw_(INTEGER N,double[] X,double[] Y,double[] W);

}