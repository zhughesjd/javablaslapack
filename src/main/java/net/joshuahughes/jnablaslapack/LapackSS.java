package net.joshuahughes.jnablaslapack;

import com.sun.jna.Library;
import com.sun.jna.Native;
import net.joshuahughes.jnablaslapack.pointer.*;

public interface LapackSS extends Library
{

	public static LapackSS instance = (LapackSS) Native.loadLibrary("liblapack",LapackSS.class);

	public void ssbev_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,INTEGER KD,float[] AB,INTEGER LDAB,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER INFO);
	public void ssbevd_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,INTEGER KD,float[] AB,INTEGER LDAB,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void ssbevx_(CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,INTEGER KD,float[] AB,INTEGER LDAB,float[] Q,INTEGER LDQ,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void ssbgst_(CHARACTER VECT,CHARACTER UPLO,INTEGER N,INTEGER KA,INTEGER KB,float[] AB,INTEGER LDAB,float[] BB,INTEGER LDBB,float[] X,INTEGER LDX,float[] WORK,INTEGER INFO);
	public void ssbgv_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,INTEGER KA,INTEGER KB,float[] AB,INTEGER LDAB,float[] BB,INTEGER LDBB,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER INFO);
	public void ssbgvd_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,INTEGER KA,INTEGER KB,float[] AB,INTEGER LDAB,float[] BB,INTEGER LDBB,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void ssbgvx_(CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,INTEGER KA,INTEGER KB,float[] AB,INTEGER LDAB,float[] BB,INTEGER LDBB,float[] Q,INTEGER LDQ,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void ssbtrd_(CHARACTER VECT,CHARACTER UPLO,INTEGER N,INTEGER KD,float[] AB,INTEGER LDAB,float[] D,float[] E,float[] Q,INTEGER LDQ,float[] WORK,INTEGER INFO);
	public void ssfrk_(CHARACTER TRANSR,CHARACTER UPLO,CHARACTER TRANS,INTEGER N,INTEGER K,REAL ALPHA,float[] A,INTEGER LDA,REAL BETA,float[] C);
	public void sspcon_(CHARACTER UPLO,INTEGER N,float[] AP,int[] IPIV,REAL ANORM,REAL RCOND,float[] WORK,int[] IWORK,INTEGER INFO);
	public void sspev_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] AP,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER INFO);
	public void sspevd_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] AP,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void sspevx_(CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,float[] AP,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void sspgst_(INTEGER ITYPE,CHARACTER UPLO,INTEGER N,float[] AP,float[] BP,INTEGER INFO);
	public void sspgv_(INTEGER ITYPE,CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] AP,float[] BP,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER INFO);
	public void sspgvd_(INTEGER ITYPE,CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] AP,float[] BP,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void sspgvx_(INTEGER ITYPE,CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,float[] AP,float[] BP,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void ssprfs_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] AP,float[] AFP,int[] IPIV,float[] B,INTEGER LDB,float[] X,INTEGER LDX,float[] FERR,float[] BERR,float[] WORK,int[] IWORK,INTEGER INFO);
	public void sspsv_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] AP,int[] IPIV,float[] B,INTEGER LDB,INTEGER INFO);
	public void sspsvx_(CHARACTER FACT,CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] AP,float[] AFP,int[] IPIV,float[] B,INTEGER LDB,float[] X,INTEGER LDX,REAL RCOND,float[] FERR,float[] BERR,float[] WORK,int[] IWORK,INTEGER INFO);
	public void ssptrd_(CHARACTER UPLO,INTEGER N,float[] AP,float[] D,float[] E,float[] TAU,INTEGER INFO);
	public void ssptrf_(CHARACTER UPLO,INTEGER N,float[] AP,int[] IPIV,INTEGER INFO);
	public void ssptri_(CHARACTER UPLO,INTEGER N,float[] AP,int[] IPIV,float[] WORK,INTEGER INFO);
	public void ssptrs_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] AP,int[] IPIV,float[] B,INTEGER LDB,INTEGER INFO);
	public void sstebz_(CHARACTER RANGE,CHARACTER ORDER,INTEGER N,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,float[] D,float[] E,INTEGER M,INTEGER NSPLIT,float[] W,int[] IBLOCK,int[] ISPLIT,float[] WORK,int[] IWORK,INTEGER INFO);
	public void sstedc_(CHARACTER COMPZ,INTEGER N,float[] D,float[] E,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void sstegr_(CHARACTER JOBZ,CHARACTER RANGE,INTEGER N,float[] D,float[] E,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,int[] ISUPPZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void sstein_(INTEGER N,float[] D,float[] E,INTEGER M,float[] W,int[] IBLOCK,int[] ISPLIT,float[] Z,INTEGER LDZ,float[] WORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void sstemr_(CHARACTER JOBZ,CHARACTER RANGE,INTEGER N,float[] D,float[] E,REAL VL,REAL VU,INTEGER IL,INTEGER IU,INTEGER M,float[] W,float[] Z,INTEGER LDZ,INTEGER NZC,int[] ISUPPZ,LOGICAL TRYRAC,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void ssteqr_(CHARACTER COMPZ,INTEGER N,float[] D,float[] E,float[] Z,INTEGER LDZ,float[] WORK,INTEGER INFO);
	public void ssterf_(INTEGER N,float[] D,float[] E,INTEGER INFO);
	public void sstev_(CHARACTER JOBZ,INTEGER N,float[] D,float[] E,float[] Z,INTEGER LDZ,float[] WORK,INTEGER INFO);
	public void sstevd_(CHARACTER JOBZ,INTEGER N,float[] D,float[] E,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void sstevr_(CHARACTER JOBZ,CHARACTER RANGE,INTEGER N,float[] D,float[] E,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,int[] ISUPPZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void sstevx_(CHARACTER JOBZ,CHARACTER RANGE,INTEGER N,float[] D,float[] E,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void ssycon_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,REAL ANORM,REAL RCOND,float[] WORK,int[] IWORK,INTEGER INFO);
	public void ssyconv_(CHARACTER UPLO,CHARACTER WAY,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] E,INTEGER INFO);
	public void ssycon_rook_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,REAL ANORM,REAL RCOND,float[] WORK,int[] IWORK,INTEGER INFO);
	public void ssyequb_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] S,REAL SCOND,REAL AMAX,float[] WORK,INTEGER INFO);
	public void ssyev_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] W,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssyevd_(CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] W,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void ssyevr_(CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,int[] ISUPPZ,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void ssyevx_(CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void ssygs2_(INTEGER ITYPE,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] B,INTEGER LDB,INTEGER INFO);
	public void ssygst_(INTEGER ITYPE,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] B,INTEGER LDB,INTEGER INFO);
	public void ssygv_(INTEGER ITYPE,CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] B,INTEGER LDB,float[] W,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssygvd_(INTEGER ITYPE,CHARACTER JOBZ,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] B,INTEGER LDB,float[] W,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER LIWORK,INTEGER INFO);
	public void ssygvx_(INTEGER ITYPE,CHARACTER JOBZ,CHARACTER RANGE,CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] B,INTEGER LDB,REAL VL,REAL VU,INTEGER IL,INTEGER IU,REAL ABSTOL,INTEGER M,float[] W,float[] Z,INTEGER LDZ,float[] WORK,INTEGER LWORK,int[] IWORK,int[] IFAIL,INTEGER INFO);
	public void ssyrfs_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,float[] AF,INTEGER LDAF,int[] IPIV,float[] B,INTEGER LDB,float[] X,INTEGER LDX,float[] FERR,float[] BERR,float[] WORK,int[] IWORK,INTEGER INFO);
	public void ssyrfsx_(CHARACTER UPLO,CHARACTER EQUED,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,float[] AF,INTEGER LDAF,int[] IPIV,float[] S,float[] B,INTEGER LDB,float[] X,INTEGER LDX,REAL RCOND,float[] BERR,INTEGER N_ERR_BNDS,float[] ERR_BNDS_NORM,float[] ERR_BNDS_COMP,INTEGER NPARAMS,float[] PARAMS,float[] WORK,int[] IWORK,INTEGER INFO);
	public void ssysv_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,int[] IPIV,float[] B,INTEGER LDB,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssysvx_(CHARACTER FACT,CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,float[] AF,INTEGER LDAF,int[] IPIV,float[] B,INTEGER LDB,float[] X,INTEGER LDX,REAL RCOND,float[] FERR,float[] BERR,float[] WORK,INTEGER LWORK,int[] IWORK,INTEGER INFO);
	public void ssysvxx_(CHARACTER FACT,CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,float[] AF,INTEGER LDAF,int[] IPIV,CHARACTER EQUED,float[] S,float[] B,INTEGER LDB,float[] X,INTEGER LDX,REAL RCOND,REAL RPVGRW,float[] BERR,INTEGER N_ERR_BNDS,float[] ERR_BNDS_NORM,float[] ERR_BNDS_COMP,INTEGER NPARAMS,float[] PARAMS,float[] WORK,int[] IWORK,INTEGER INFO,LOGICAL LSAME,REAL SLAMCH,REAL SLA_SYRPVGRW);
	public void ssysv_rook_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,int[] IPIV,float[] B,INTEGER LDB,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssyswapr_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,INTEGER I1,INTEGER I2);
	public void ssytd2_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] D,float[] E,float[] TAU,INTEGER INFO);
	public void ssytf2_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,INTEGER INFO);
	public void ssytf2_rook_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,INTEGER INFO);
	public void ssytrd_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,float[] D,float[] E,float[] TAU,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssytrf_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssytrf_rook_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssytri_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] WORK,INTEGER INFO);
	public void ssytri2_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] WORK,INTEGER LWORK,INTEGER INFO);
	public void ssytri2x_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] WORK,INTEGER NB,INTEGER INFO);
	public void ssytri_rook_(CHARACTER UPLO,INTEGER N,float[] A,INTEGER LDA,int[] IPIV,float[] WORK,INTEGER INFO);
	public void ssytrs_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,int[] IPIV,float[] B,INTEGER LDB,INTEGER INFO);
	public void ssytrs2_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,int[] IPIV,float[] B,INTEGER LDB,float[] WORK,INTEGER INFO);
	public void ssytrs_rook_(CHARACTER UPLO,INTEGER N,INTEGER NRHS,float[] A,INTEGER LDA,int[] IPIV,float[] B,INTEGER LDB,INTEGER INFO);

}